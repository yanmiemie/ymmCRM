{"remainingRequest":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/yanMieee/node_modules/thread-loader/dist/cjs.js!/Users/qiushunqun/Desktop/yanMieeMie/GitHub/yanMieee/node_modules/babel-loader/lib/index.js!/Users/qiushunqun/Desktop/yanMieeMie/GitHub/yanMieee/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qiushunqun/Desktop/yanMieeMie/GitHub/yanMieee/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiushunqun/Desktop/yanMieeMie/GitHub/yanMieee/src/components/asask5_MdfPr.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/yanMieee/src/components/asask5_MdfPr.vue","mtime":1651637056097},{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/yanMieee/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/yanMieee/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/yanMieee/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/yanMieee/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/yanMieee/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9xaXVzaHVucXVuL0Rlc2t0b3AveWFuTWllZU1pZS9HaXRIdWIveWFuTWllZWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgVHV0b3JpYWxEYXRhU2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy9wbGF5ZXJTZXJ2aWNlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJ0dXRvcmlhbCIsCiAgcHJvcHM6IFsidHV0b3JpYWwiXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWVzc2FnZTogIiIsCiAgICAgIGN1dF9vcHRzOiBbJ+ihk+WJjScsICfooZPlvozkuIDlgIvmnIgnLCAn6KGT5b6M5LiJ5YCL5pyIJywgJ+ihk+W+jOWbm+WAi+aciCcsICfooZPlvozlha3lgIvmnIgnLCAn6KGT5b6M5Lmd5YCL5pyIJywgJ+ihk+W+jOS4gOW5tCcsICfooZPlvozlhanlubQnLCAn6KGT5b6M5LiJ5bm0J10sCiAgICAgIHNob3c6IHRydWUsCiAgICAgIGN1cnJlbnRUdXRvcmlhbDogewogICAgICAgIHF1aXpfc3RhdHU6ICIiLAogICAgICAgIHF1aXpfZGF0ZTogIiIsCiAgICAgICAgbWVtbzogIiIsCiAgICAgICAgbmFtZTogIiIsCiAgICAgICAgcGF0aWVudF9JRDogIiIsCiAgICAgICAgcHJlUGFyZTogW10sCiAgICAgICAgcXVpel8xOiBbXSwKICAgICAgICBxdWl6XzFfZmRiazogW10sCiAgICAgICAgcXVpel8yOiBbXSwKICAgICAgICBxdWl6XzJfZmRiazogW10sCiAgICAgICAgcXVpel8zOiBbXSwKICAgICAgICBxdWl6XzNfZmRiazogW10KICAgICAgfSwKICAgICAgc3RtcF9pZHg6ICIiCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIHR1dG9yaWFsOiBmdW5jdGlvbiB0dXRvcmlhbChfdHV0b3JpYWwpIHsKICAgICAgdGhpcy5jdXJyZW50VHV0b3JpYWwgPSBfb2JqZWN0U3ByZWFkKHt9LCBfdHV0b3JpYWwpOwogICAgICB0aGlzLm1lc3NhZ2UgPSAi56K66KqN5LitLi4uIjsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZVB1Ymxpc2hlZDogZnVuY3Rpb24gdXBkYXRlUHVibGlzaGVkKHN0YXR1cykgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgVHV0b3JpYWxEYXRhU2VydmljZS51cGRhdGUodGhpcy5jdXJyZW50VHV0b3JpYWwua2V5LCB7CiAgICAgICAgcHVibGlzaGVkOiBzdGF0dXMKICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMuY3VycmVudFR1dG9yaWFsLnB1Ymxpc2hlZCA9IHN0YXR1czsKICAgICAgICBfdGhpcy5tZXNzYWdlID0gIlRoZSBzdGF0dXMgd2FzIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5ISI7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgIH0pOwogICAgfSwKICAgIHJlc2V0VHV0b3JpYWw6IGZ1bmN0aW9uIHJlc2V0VHV0b3JpYWwoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5jdXJyZW50VHV0b3JpYWwudG1wX2lkeCA9ICIiOwogICAgICB0aGlzLmN1cnJlbnRUdXRvcmlhbC5sZWZ0X3RpbWUgPSAiIjsKICAgICAgdGhpcy5jdXJyZW50VHV0b3JpYWwubWVtbyA9ICIiOwogICAgICB2YXIgZGF0YSA9IHsKICAgICAgICB0bXBfaWR4OiAiIiwKICAgICAgICBsZWZ0X3RpbWU6ICIiLAogICAgICAgIG1lbW86ICIiCiAgICAgIH07CiAgICAgIFR1dG9yaWFsRGF0YVNlcnZpY2UudXBkYXRlKHRoaXMuY3VycmVudFR1dG9yaWFsLmtleSwgZGF0YSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMyLm1lc3NhZ2UgPSAi6LOH5paZ77yM5riF6Zmk5oiQ5YqfICEiOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICB9KTsKICAgIH0sCiAgICB1cGRhdGVUdXRvcmlhbDogZnVuY3Rpb24gdXBkYXRlVHV0b3JpYWwoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAgLy8gbmFtZTogdGhpcy5jdXJyZW50VHV0b3JpYWwubmFtZSwgCiAgICAgICAgLy8gc25vX2lkeDogdGhpcy5jdXJyZW50VHV0b3JpYWwuc25vX2lkeCwKICAgICAgICAvLyBzbm9fZHRsOnRoaXMuY3VycmVudFR1dG9yaWFsLnNub19kdGwsCiAgICAgICAgLy8gcXVlc3Rpb246dGhpcy5jdXJyZW50VHV0b3JpYWwucXVlc3Rpb24sCiAgICAgICAgLy8gcXVlc29wdHM6dGhpcy5jdXJyZW50VHV0b3JpYWwucXVlc29wdHMsCiAgICAgICAgLy8gcXVlc2luZHVjOnRoaXMuY3VycmVudFR1dG9yaWFsLnF1ZXNpbmR1YywKICAgICAgICBxdWl6X3N0YXR1OiB0aGlzLmN1cnJlbnRUdXRvcmlhbC5xdWl6X3N0YXR1LAogICAgICAgIHF1aXpfZGF0ZTogdGhpcy5jdXJyZW50VHV0b3JpYWwucXVpel9kYXRlLAogICAgICAgIG5hbWU6IHRoaXMuY3VycmVudFR1dG9yaWFsLm5hbWUsCiAgICAgICAgcGF0aWVudF9JRDogdGhpcy5jdXJyZW50VHV0b3JpYWwucGF0aWVudF9JRCwKICAgICAgICBwcmVQYXJlOiB0aGlzLmN1cnJlbnRUdXRvcmlhbC5wcmVQYXJlLAogICAgICAgIG1lbW86IHRoaXMuY3VycmVudFR1dG9yaWFsLm1lbW8gLy8gcXVpel8xX2R0bCAgOiB0aGlzLmN1cnJlbnRUdXRvcmlhbC5xdWl6XzEsCiAgICAgICAgLy8gcXVpel8xX2ZkYmsgOiB0aGlzLmN1cnJlbnRUdXRvcmlhbC5xdWl6XzFfZmRiaywgCiAgICAgICAgLy8gcXVpel8yX2R0bCAgOiB0aGlzLmN1cnJlbnRUdXRvcmlhbC5xdWl6XzIsCiAgICAgICAgLy8gcXVpel8yX2ZkYmsgOiB0aGlzLmN1cnJlbnRUdXRvcmlhbC5xdWl6XzFfZmRiaywKICAgICAgICAvLyBxdWl6XzNfZHRsICA6IHRoaXMuY3VycmVudFR1dG9yaWFsLnF1aXpfMSwKICAgICAgICAvLyBxdWl6XzNfZmRiayA6IHRoaXMucGxheWVyLnF1aXpfMV9mZGJrLCAKCiAgICAgIH07CiAgICAgIFR1dG9yaWFsRGF0YVNlcnZpY2UudXBkYXRlKHRoaXMuY3VycmVudFR1dG9yaWFsLmtleSwgZGF0YSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMzLm1lc3NhZ2UgPSAi5pu05paw6LOH5paZLOS4iuWCs+aIkOWKnyEiOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICB9KTsKICAgIH0sCiAgICBkZWxldGVUdXRvcmlhbDogZnVuY3Rpb24gZGVsZXRlVHV0b3JpYWwoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgVHV0b3JpYWxEYXRhU2VydmljZS5kZWxldGUodGhpcy5jdXJyZW50VHV0b3JpYWwua2V5KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczQuJGVtaXQoInJlZnJlc2hMaXN0Iik7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgIH0pOwogICAgfSwKICAgIHJlbW92ZUFsbFR1dG9yaWFsczogZnVuY3Rpb24gcmVtb3ZlQWxsVHV0b3JpYWxzKCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIFR1dG9yaWFsRGF0YVNlcnZpY2UuZGVsZXRlQWxsKCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXM1LnJlZnJlc2hMaXN0KCk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgIH0pOwogICAgfSwKICAgIGNvcHlvcHRzOiBmdW5jdGlvbiBjb3B5b3B0cyhpZHgpIHsKICAgICAgdGhpcy5jdXJyZW50VHV0b3JpYWwucXVlc29wdHNbMF0gPSB0aGlzLnNsdF9vcHRzW2lkeF0ub3B0c19BLCB0aGlzLmN1cnJlbnRUdXRvcmlhbC5xdWVzb3B0c1sxXSA9IHRoaXMuc2x0X29wdHNbaWR4XS5vcHRzX0IsIHRoaXMuY3VycmVudFR1dG9yaWFsLnF1ZXNvcHRzWzJdID0gdGhpcy5zbHRfb3B0c1tpZHhdLm9wdHNfQywgdGhpcy5jdXJyZW50VHV0b3JpYWwucXVlc29wdHNbM10gPSB0aGlzLnNsdF9vcHRzW2lkeF0ub3B0c19ELCB0aGlzLmN1cnJlbnRUdXRvcmlhbC5xdWVzb3B0c1s0XSA9IHRoaXMuc2x0X29wdHNbaWR4XS5vcHRzX0U7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5tZXNzYWdlID0gIiI7CiAgICB0aGlzLmN1cnJlbnRUdXRvcmlhbCA9IF9vYmplY3RTcHJlYWQoe30sIHRoaXMudHV0b3JpYWwpOwogIH0KfTs="},null]}