{"remainingRequest":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/src/components/PMNAdd.vue?vue&type=template&id=cc126e10&","dependencies":[{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/src/components/PMNAdd.vue","mtime":1634974970030},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:IAogIDxkaXYgY2xhc3M9InN1Ym1pdC1mb3JtIj4KICAgIDxkaXYgdi1pZj0iIXN1Ym1pdHRlZCI+ICAKICAgICAgPHYtZm9ybT4KICAgICAgICA8di1jb250YWluZXIgPiAgCiAgICAgICAgICA8c3Ryb25nPuWfuuacrOizh+aWme+8mjwvc3Ryb25nPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZDpncmlkIGdyaWQtY29scy01IGdhcC00Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJnLWdyYXktMjAwIGNvbC1zcGFuLTUgcm91bmRlZC1sZyBwdC0zIj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWQ6Z3JpZCBncmlkLWNvbHMtNSBnYXAtMiI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIG1kOnAtMiAiPgogICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9Iumhp+WuouWnk+WQjSIKICAgICAgICAgICAgICAgICAgICAgICAgICBzb2xvCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlcGVuZC1pbm5lci1pY29uPSJtZGktY3JlYXRpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0icE5vdGUuYmtfdXNlck5hbWUiCiAgICAgICAgICAgICAgICAgICAgICAgID48L3YtdGV4dC1maWVsZD4gIAogICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIG1kOnAtMiAiPgogICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9Iumhp+WuouaJi+apnyIKICAgICAgICAgICAgICAgICAgICAgICAgICBzb2xvCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlcGVuZC1pbm5lci1pY29uPSJtZGktcGhvbmUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0icE5vdGUuYmtfcGhvbmVOdW0iCiAgICAgICAgICAgICAgICAgICAgICAgID48L3YtdGV4dC1maWVsZD4gIAogICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIG1kOnAtMiAiPgogICAgICAgICAgICAgICAgICAgICAgPHYtbWVudQogICAgICAgICAgICAgICAgICAgICAgICByZWY9Im1lbnUiCiAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9Im1lbnUiCiAgICAgICAgICAgICAgICAgICAgICAgIDpjbG9zZS1vbi1jb250ZW50LWNsaWNrPSJmYWxzZSIKICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbj0ic2NhbGUtdHJhbnNpdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0LXkgCiAgICAgICAgICAgICAgICAgICAgICAgIG1pbi13aWR0aD0iYXV0byIKICAgICAgICAgICAgICAgICAgICAgID4KCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6YWN0aXZhdG9yPSJ7IG9uLCBhdHRycyB9Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJwTm90ZS5ia19EYXRlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9IumgkOe0hOaXpeacnyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXBlbmQtaW5uZXItaWNvbj0ibWRpLWNhbGVuZGFyIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZG9ubHkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvbG8KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LWJpbmQ9ImF0dHJzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1vbj0ib24iCiAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgICAgICA8di1kYXRlLXBpY2tlcgogICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InBOb3RlLmJrX0RhdGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgOmFjdGl2ZS1waWNrZXIuc3luYz0iYWN0aXZlUGlja2VyIgogICAgICAgICAgICAgICAgICAgICAgICAgIDptYXg9IihuZXcgRGF0ZShEYXRlLm5vdygpIC0gKG5ldyBEYXRlKCkpLmdldFRpbWV6b25lT2Zmc2V0KCkgKiA2MDAwMCkpLnRvSVNPU3RyaW5nKCkuc3Vic3RyKDAsIDEwKSIKICAgICAgICAgICAgICAgICAgICAgICAgICBtaW49IjE5NTAtMDEtMDEiCiAgICAgICAgICAgICAgICAgICAgICAgICAgQGNoYW5nZT0ic2F2ZURhdGUiCiAgICAgICAgICAgICAgICAgICAgICAgID48L3YtZGF0ZS1waWNrZXI+CiAgICAgICAgICAgICAgICAgICAgICA8L3YtbWVudT4gCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IiBtZDpwLTIiPgogICAgICAgICAgICAgICAgICAgICAgPHYtc2VsZWN0IAogICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJwTm90ZS5ia19SZCIKICAgICAgICAgICAgICAgICAgICAgICAgOml0ZW1zPSJvbmxpbmVSb3VuZCIKICAgICAgICAgICAgICAgICAgICAgICAgcHJlcGVuZC1pbm5lci1pY29uPSJtZGktY2xpcGJvYXJkLWNoZWNrIgogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0i6aCQ57SE5aC05qyhIiAKICAgICAgICAgICAgICAgICAgICAgICAgc29sbwogICAgICAgICAgICAgICAgICAgICAgICBwZXJzaXN0ZW50LWhpbnQKICAgICAgICAgICAgICAgICAgICAgID48L3Ytc2VsZWN0PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgIAogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IiBtZDpwLTIgIj4gIAogICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCAgIAogICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJwTm90ZS5ia19tZW1vIgogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0i6KiC6LO86Ki76KiYIgogICAgICAgICAgICAgICAgICAgICAgICBwcmVwZW5kLWlubmVyLWljb249IiIKICAgICAgICAgICAgICAgICAgICAgICAgc29sbwogICAgICAgICAgICAgICAgICAgICAgICBjbGVhcmFibGUgCiAgICAgICAgICAgICAgICAgICAgICA+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIG1kOnAtMiAiPiAgIAogICAgICAgICAgICAgICAgICAgICAgPHYtc2VsZWN0ICAKICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0icE5vdGUuYmtfY3h0bVR5cGUiCiAgICAgICAgICAgICAgICAgICAgICAgIDppdGVtcz0idGVtcF9tYnJUeXBlIgogICAgICAgICAgICAgICAgICAgICAgICBwcmVwZW5kLWlubmVyLWljb249Im1kaS1hY2NvdW50IgogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0i5pyD5ZOh6aGe5YilIgogICAgICAgICAgICAgICAgICAgICAgICBtdWx0aXBsZQogICAgICAgICAgICAgICAgICAgICAgICBzb2xvCiAgICAgICAgICAgICAgICAgICAgICAgIHBlcnNpc3RlbnQtaGludAogICAgICAgICAgICAgICAgICAgICAgPjwvdi1zZWxlY3Q+IAogICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSIgbWQ6cC0yICI+IAogICAgICAgICAgICAgICAgICAgICAgPHYtc2VsZWN0ICAKICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0icE5vdGUuYmtfZ3BUeXBlIiAKICAgICAgICAgICAgICAgICAgICAgICAgOml0ZW1zPSJ0ZW1wX2N4dG1UeXBlIgogICAgICAgICAgICAgICAgICAgICAgICBwcmVwZW5kLWlubmVyLWljb249Im1kaS1hY2NvdW50IgogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0i6aGn5a6i6Lyq5buTIgogICAgICAgICAgICAgICAgICAgICAgICBtdWx0aXBsZQogICAgICAgICAgICAgICAgICAgICAgICBzb2xvCiAgICAgICAgICAgICAgICAgICAgICAgIHBlcnNpc3RlbnQtaGludAogICAgICAgICAgICAgICAgICAgICAgPjwvdi1zZWxlY3Q+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IiBtZDpwLTIgIj4gCiAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICAgCiAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InBOb3RlLnNhZmVJRF9Ob3RlIgogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0i5L+d6Zqq5aGr6Ki76KiYIgogICAgICAgICAgICAgICAgICAgICAgICBwcmVwZW5kLWlubmVyLWljb249Im1kaS1oZWFydCIKICAgICAgICAgICAgICAgICAgICAgICAgc29sbwogICAgICAgICAgICAgICAgICAgICAgICBjbGVhcmFibGUgCiAgICAgICAgICAgICAgICAgICAgICA+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSIgbWQ6cC0yIGNvbC1zcGFuLTEiPiAKICAgICAgICAgICAgICAgICAgICAgICAgPHYtc2VsZWN0IAogICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJwTm90ZS5ia19BbXQiCiAgICAgICAgICAgICAgICAgICAgICAgIDppdGVtcz0iY250UGVvZXBlIgogICAgICAgICAgICAgICAgICAgICAgICBwcmVwZW5kLWlubmVyLWljb249Im1kaS13aWRnZXRzIgogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0i5YWl5aC05Lq65pW4IiAKICAgICAgICAgICAgICAgICAgICAgICAgc29sbwogICAgICAgICAgICAgICAgICAgICAgICBwZXJzaXN0ZW50LWhpbnQKICAgICAgICAgICAgICAgICAgICAgID48L3Ytc2VsZWN0PiAgCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAKCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIG1kOnAtMiAgY29sLXNwYW4tMSI+CiAgICAgICAgICAgICAgICAgICAgICA8di1kaWFsb2cgCiAgICAgICAgICAgICAgICAgICAgICAgIHJlZj0iZGlhbG9nIiAKICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ibW9kZWwiCiAgICAgICAgICAgICAgICAgICAgICAgIDpyZXR1cm4tdmFsdWUuc3luYz0idGltZSIKICAgICAgICAgICAgICAgICAgICAgICAgcGVyc2lzdGVudAogICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD0iMjkwcHgiCiAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDphY3RpdmF0b3I9Insgb24sIGF0dHJzIH0iPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQKICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0icE5vdGUuY2hraW5UaW1lIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9IuWgseWIsOaZgumWkyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXBlbmQtaW5uZXItaWNvbj0ibWRpLWNsb2NrLXRpbWUtZm91ci1vdXRsaW5lIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZG9ubHkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvbG8KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPSIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LWJpbmQ9ImF0dHJzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1vbj0ib24iCiAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgICAgICA8di10aW1lLXBpY2tlcgogICAgICAgICAgICAgICAgICAgICAgICAgIHYtaWY9Im1vZGFsMiIKICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJwTm90ZS5jaGtpblRpbWUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgZnVsbC13aWR0aAogICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtc3BhY2VyPjwvdi1zcGFjZXI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcj0icHJpbWFyeSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0ibW9kYWwyID0gZmFsc2UiCiAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2FuY2VsCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yPSJwcmltYXJ5IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSIkcmVmcy5kaWFsb2cuc2F2ZSh0aW1lKSIKICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBPSwogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdi10aW1lLXBpY2tlcj4KICAgICAgICAgICAgICAgICAgICAgIDwvdi1kaWFsb2c+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJib3JkZXItMSBib3JkZXItZ3JheS0zMDAgcm91bmRlZC1sZyBwLTIgY29sLXNwYW4tMSAgIj4gIAogICAgICAgICAgICAgICAgICA8IS0tIDxzdHJvbmc+IOmmluasoea2iOiyu++8miA8L3N0cm9uZz4gLS0+CiAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+5o6l6aeB77yaPC9zdHJvbmc+IHt7IHN1bUJ1cyhbcE5vdGUuYnVzXzFXLCBwTm90ZS5idXNfMlddKSB9fSAg5YWDCgogIAogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWQ6Z3JpZCBncmlkLWNvbHMtMiBnYXAtMiAiPiAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIG1kOnAtMiBjb2wtc3Bhbi0yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIDx2LXNlbGVjdCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvdi1zZWxlY3Q+IC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0icE5vdGUuYnVzXzFXIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgOml0ZW1zPSJjbnRQZW9lcGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVwZW5kLWljb249Im1kaS1idXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0iCOWWrui2ny7mjqXpp4EuLuS6uuaVuCIgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb2xvCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlwcyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlcnNpc3RlbnQtaGludCAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvdi1zZWxlY3Q+ICAKCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSdwTm90ZS5idXNfMlcnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6aXRlbXM9ImNudFBlb2VwZSIgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVwZW5kLWljb249Im1kaS1zd2FwLWhvcml6b250YWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0iCOS+huWbni7mjqXpp4HkurrmlbgiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgc29sbwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpcHMgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZXJzaXN0ZW50LWhpbnQgCiAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvdi1zZWxlY3Q+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIG1kOnAtMiBjb2wtc3Bhbi0yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8di1zZWxlY3QKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9J3BOb3RlLmJ1c19wYXlXJwogICAgICAgICAgICAgICAgICAgICAgICAgICAgOml0ZW1zPSJ0ZW1wX3BheVR5cGUiICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPSII5pSv5LuY5pa55byPIiAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlwcyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGxlZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVyc2lzdGVudC1oaW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvdi1zZWxlY3Q+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPGEgY2xhc3M9ImNvbC1zcGFuLTIgIj4gPC9hPiAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPC9kaXY+IAo8ZGl2IGNsYXNzPSJib3JkZXItMSBib3JkZXItZ3JheS0zMDAgcm91bmRlZC1sZyBwLTIgY29sLXNwYW4tMiAgIj4gIAogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZDpncmlkIGdyaWQtY29scy0yIGdhcC00Ij4KICAgICAgICA8ZGl2IGNsYXNzPSIgY29sLXNwYW4tMSAiPiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+5byT5YW377yaPC9zdHJvbmc+IHt7IHN1bVRvb2xzKFtwTm90ZS50b29sXzEsIHBOb3RlLnRvb2xfMixwTm90ZS50b29sXzMscE5vdGUudG9vbF80LHBOb3RlLnRvb2xfcHJkMSxwTm90ZS50b29sX3ByZDJdKSB9fSAgIOWFgwogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWQ6Z3JpZCBncmlkLWNvbHMtMiAiPiAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIG1kOnAtMiAiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ncE5vdGUudG9vbF8xJwogICAgICAgICAgICAgICAgICAgICAgICAgICAgOml0ZW1zPSJjbnRQZW9lcGUiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpcHMgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9IgjlgrPntbHlvJMgMTAwIiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlcnNpc3RlbnQtaGludCAKICAgICAgICAgICAgICAgICAgICAgICAgICA+PC92LXNlbGVjdD4gCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IiBtZDpwLTIgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8di1zZWxlY3QKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9J3BOb3RlLnRvb2xfMicKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDppdGVtcz0iY250UGVvZXBlIiAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0iCOWPjeabsuW8kyAyMDAiICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaXBzIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVyc2lzdGVudC1oaW50IAogICAgICAgICAgICAgICAgICAgICAgICAgID48L3Ytc2VsZWN0PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IiBtZDpwLTIgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8di1zZWxlY3QKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9J3BOb3RlLnRvb2xfMycKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDppdGVtcz0iY250UGVvZXBlIiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPSIgCOikh+WQiOW8kyAyMDAiICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaXBzICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlcnNpc3RlbnQtaGludCAKICAgICAgICAgICAgICAgICAgICAgICAgICA+PC92LXNlbGVjdD4gCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IiBtZDpwLTIgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8di1zZWxlY3QKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9J3BOb3RlLnRvb2xfNCcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDppdGVtcz0iY250UGVvZXBlIiAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0iCOenn+eurSg25pSvKSAxMDAiICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaXBzIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVyc2lzdGVudC1oaW50IAogICAgICAgICAgICAgICAgICAgICAgICAgID48L3Ytc2VsZWN0PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSIgbWQ6cC0yICI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSdwTm90ZS50b29sX3ByZDEnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6aXRlbXM9ImNudFBlb2VwZSIgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9IgjovJUu6auU6amXIDQwMCIgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpcHMgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZXJzaXN0ZW50LWhpbnQgCiAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvdi1zZWxlY3Q+CiAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIG1kOnAtMiAiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ncE5vdGUudG9vbF9wcmQyJwogICAgICAgICAgICAgICAgICAgICAgICAgICAgOml0ZW1zPSJjbnRQZW9lcGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0iCOaZmi7pq5TpqZcgNTAwIiAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpcHMgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZXJzaXN0ZW50LWhpbnQgCiAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvdi1zZWxlY3Q+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IiBtZDpwLTIgY29sLXNwYW4tMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSdwTm90ZS50b29sX3BheVcnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6aXRlbXM9InRlbXBfcGF5VHlwZSIgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9IgjmlK/ku5jmlrnlvI8iIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpcHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGxlZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVyc2lzdGVudC1oaW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvdi1zZWxlY3Q+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCgoKICAgICAgICA8ZGl2IGNsYXNzPSIgY29sLXNwYW4tMSAiPgogICAgICAgIDxzdHJvbmc+IOWgtOWcsO+8miA8L3N0cm9uZz4ge3sgc3VtUm9vbShbcE5vdGUucm9vbV9wcmQxLHBOb3RlLnJvb21fcHJkMl0pIH19IOWFgwogICAgICAgIDxkaXYgY2xhc3M9Im1kOmdyaWQgZ3JpZC1jb2xzLTIgZ2FwLTIgIj4gIAogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IiBtZDpwLTIgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8di1zZWxlY3QKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9J3BOb3RlLnJvb21fcHJkMScKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDppdGVtcz0iY250UGVvZXBlIiAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0iCOmmluasoS7loLTlnLDosrsgMjAwIiAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlwcyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlcnNpc3RlbnQtaGludAogICAgICAgICAgICAgICAgICAgICAgICAgID48L3Ytc2VsZWN0PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSIgbWQ6cC0yICI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSdwTm90ZS5yb29tX3ByZDInCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6aXRlbXM9ImNudFBlb2VwZSIgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9Igjop4Dos54u5riF5r2U6LK7IDEwMCIgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpcHMgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZXJzaXN0ZW50LWhpbnQKICAgICAgICAgICAgICAgICAgICAgICAgICA+PC92LXNlbGVjdD4KICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgIAogICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIG1kOnAtMiBjb2wtc3Bhbi0yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8di1zZWxlY3QKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InBOb3RlLnJvb21fcGF5VyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDppdGVtcz0idGVtcF9wYXlUeXBlIiAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0iCOaUr+S7mOaWueW8jyIgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlwcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsbGVkCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZXJzaXN0ZW50LWhpbnQKICAgICAgICAgICAgICAgICAgICAgICAgICA+PC92LXNlbGVjdD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAKICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgPGRpdiBjbGFzcz0iYm9yZGVyLTEgYm9yZGVyLWdyYXktMzAwIHJvdW5kZWQtbGcgcC0yIGNvbC1zcGFuLTEgIj4KCiAgICAgICAgPHN0cm9uZz4g57qM5pmC5Yqg6LO877yaIDwvc3Ryb25nPiAKICAgICAgICB7eyBzdW1BZGQoW3BOb3RlLmFkZFRtX3ByZDEscE5vdGUuYWRkVG1fcHJkMixwTm90ZS5hZGRUbV9wcmQzXSkgfX0g5YWDCiAgICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJtZDpncmlkIGdyaWQtY29scy0yIGdhcC0yICI+ICAKICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIG1kOnAtMiAiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ncE5vdGUuYWRkVG1fcHJkMScKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDppdGVtcz0iY250UGVvZXBlIiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPSII5qiZ6Z22IDEwMCIgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpcHMgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVyc2lzdGVudC1oaW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvdi1zZWxlY3Q+IAogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSIgbWQ6cC0yICI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSdwTm90ZS5hZGRUbV9wcmQyJwogICAgICAgICAgICAgICAgICAgICAgICAgICAgOml0ZW1zPSJjbnRQZW9lcGUiICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPSII5oeJ55SoIDMwMCIgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpcHMgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZXJzaXN0ZW50LWhpbnQKICAgICAgICAgICAgICAgICAgICAgICAgICA+PC92LXNlbGVjdD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IiBtZDpwLTIgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8di1zZWxlY3QKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9J3BOb3RlLmFkZFRtX3ByZDMnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6aXRlbXM9ImNudFBlb2VwZSIgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9IgjmipXlvbHkupLli5UgNTAiICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaXBzIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVyc2lzdGVudC1oaW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvdi1zZWxlY3Q+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSIgbWQ6cC0yIGNvbC1zcGFuLTIiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iUE1OLlBheW1lbnRfVHlwZURvd24iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6aXRlbXM9InRlbXBfcGF5VHlwZSIgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9IgjmlK/ku5jmlrnlvI8iIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpcHMgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsZWQgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZXJzaXN0ZW50LWhpbnQKICAgICAgICAgICAgICAgICAgICAgICAgICA+PC92LXNlbGVjdD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIDxkaXYgY2xhc3M9ImJvcmRlci0xIGJvcmRlci1ncmF5LTMwMCByb3VuZGVkLWxnIHAtMiBjb2wtc3Bhbi0xICI+CiAgICAgICAKICAgICAgICAgICAgICAgICAgPHN0cm9uZz4g6Zuc6aCF77yaIHt7IHBOb3RlLm90aF9pTmNtIH19IOWFgyA8L3N0cm9uZz4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSIgICI+ICAKICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0YXJlYQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ncE5vdGUub3RoX2RlcycKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPSII5Y+v55WZ5LiL6aGn5a6i6Ieo5pmC54uA5rOBLueUseeVtuePreaVmee3tOWQkeS4iuWRiOWgsSIgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpcHMgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZXJzaXN0ZW50LWhpbnQKICAgICAgICAgICAgICAgICAgICAgICAgICA+PC92LXRleHRhcmVhPiAKICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0i5a+m5pS26YeR6aGNIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ncE5vdGUub3RoX2lOY20nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb2xvCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGVhcmFibGUgCiAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvdi10ZXh0LWZpZWxkPiAKICAgICAgICAgICAgICAgICAgICAgICAgPHYtc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSdwTm90ZS5vdGhfcGF5VycKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDppdGVtcz0idGVtcF9wYXlUeXBlIiAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0iCOaUr+S7mOaWueW8jyIgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpcHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGxlZCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlcnNpc3RlbnQtaGludAogICAgICAgICAgICAgICAgICAgICAgICAgID48L3Ytc2VsZWN0PiAKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLSA8ZGl2IGNsYXNzPSJib3JkZXItMSBib3JkZXItZ3JheS0zMDAgcm91bmRlZC1sZyBjb2wtc3Bhbi01IHAtMiI+CiAgICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgNQogICAgICAgICAgCiAgICAgICAgPC9kaXY+IC0tPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Im1kOnAtMiBjb2wtc3Bhbi0xICAiPgogICAgICAgICAgPHN0cm9uZz7nlbbnj63kurrlk6HvvJo8L3N0cm9uZz4KICAgICAgICAgIDx2LXRleHQtZmllbGQgICAKICAgICAgICAgICAgbGFiZWw9Iue2k+aJi+S6uiIKICAgICAgICAgICAgc29sbwogICAgICAgICAgICBjbGVhcmFibGUgCiAgICAgICAgICAgIHYtbW9kZWw9InBOb3RlLm1kZkVtcHkiCiAgICAgICAgICA+PC92LXRleHQtZmllbGQ+IAogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9Im1kOnAtMiBwdC02IGNvbC1zcGFuLTEgICI+CiAgICAgICAgICA8YnV0dG9uIAogICAgICAgICAgICAgIEBjbGljaz0ic2F2ZVBNTiIgCiAgICAgICAgICAgICAgY2xhc3M9ImJ0biBidG4tc3VjY2VzcyBteS0yIG1kOnAtMiBjb2wtc3Bhbi0xIHRleHQteGwgIiAgCiAgICAgICAgICAgICAgPiDlhLLlrZjmlLbosrvntIDpjIQKICAgICAgICAgICAgPC9idXR0b24+ICAKICAgICAgICA8L2Rpdj4KCiAgICAgICAgIAoKICAgICAgICA8ZGl2IGNsYXNzPSJtZDpwLTIgY29sLXNwYW4tMSAgIj4KCiAgICAgICAgICA8c3Ryb25nPuaHieaUtumHkemhje+8mjwvc3Ryb25nPgogICAgICAgICAge3sgIHN1bShbcE5vdGUuYnVzX2lOY20sIHBOb3RlLnRvb2xfaU5jbSwgcE5vdGUucm9vbV9pTmNtLCBwTm90ZS5hZGRUbV9pTmNtLCBwTm90ZS5vdGhfaU5jbV0pIH19CiAgICAgICAgPGJyPgogICAgICAgICAgPCEtLSA8c3Ryb25nPummluasoee1kOeul+mHkemhje+8mjwvc3Ryb25nPiAtLT4KICAgICAgICAgICAgPHYtdGV4dC1maWVsZAogICAgICAgICAgICAgIGxhYmVsPSII6aaW5qyh57WQ566X6YeR6aGNIgogICAgICAgICAgICAgIHNvbG8gIAogICAgICAgICAgICAgIHYtbW9kZWw9IlBNTi5pbnB1dF9tb25leSIKICAgICAgICAgICAgPjwvdi10ZXh0LWZpZWxkPiAKICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJtZDpwLTIgY29sLXNwYW4tMSAgIj4KICAgICAgICAgIDxzdHJvbmc+57qM5pmC57WQ566X6YeR6aGN77yaPC9zdHJvbmc+CiAgICAgICAgICB7eyAgc3VtKFsgcE5vdGUuYWRkVG1faU5jbSwgcE5vdGUub3RoX2lOY21dKSB9fQogICAgICAgICAgICA8di10ZXh0LWZpZWxkCiAgICAgICAgICAgICAgbGFiZWw9IgjnuozmmYLntZDnrpfph5HpoY0iCiAgICAgICAgICAgICAgc29sbyAgCiAgICAgICAgICAgICAgdi1tb2RlbD0iUE1OLmlucHV0X21vbmV5IgogICAgICAgICAgICA+PC92LXRleHQtZmllbGQ+IAogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9Im1kOnAtMiBjb2wtc3Bhbi0xICAiPgogICAgICAgICAgPHN0cm9uZz7nuL3ph5HpoY0o5a+m5pS2Ke+8mjwvc3Ryb25nPgogICAgICAgICAgICA8di10ZXh0LWZpZWxkCiAgICAgICAgICAgICAgbGFiZWw9Igjlr6bmlLbnuL3ph5HpoY0iCiAgICAgICAgICAgICAgc29sbyAgCiAgICAgICAgICAgICAgdi1tb2RlbD0iUE1OLmlucHV0X21vbmV5IgogICAgICAgICAgICA+PC92LXRleHQtZmllbGQ+ICAKICAgICAgICA8L2Rpdj4gCiAgICAgICAgPGEgY2xhc3M9InRleHQteHMgdGV4dC1ncmF5LTMwMCBjb2wtc3Bhbi01ICIgPiDplovlp4vnt6jovK/mmYLplpPvvJogIHt7IHN5c3RpbWUgfX0gPC9hPiAKICAgICAgPC9kaXY+IAoKICAgICAgPCEtLSB7e25vd1BNU319IC0tPgogICAgICA8aHI+CiAgICAgICA8IS0tIHt7dGVtcF90b29sc0JvcnJvd319IC0tPgogICAgICA8IS0tIDxocj4KICAgICAgICB7e3RlbXBfdG9vbHNCb3Jyb3dbMF0ucHJpY2V9fSAtLT4KICAgPC92LWNvbnRhaW5lcj4gCiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgIDwvdi1mb3JtPiAKICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICA8ZGl2IHYtZWxzZT4KICAgICAgICAgICAgICA8aDQ+6LOH5paZ5bey5paw5aKe5oiQ5YqfITwvaDQ+CiAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4tc3VjY2VzcyIgQGNsaWNrPSJuZXdQTU4iPuWGjeaWsOWinuS4gOethjwvYnV0dG9uPgogICAgICAgICAgICAgICAgICA8di1idG4gZmxhdCBjbGFzcz0ibXgtMiI+CiAgICAgICAgICAgICAgICAgICAgPHJvdXRlci1saW5rIHRvPSIvUE1OTGlzdCI+IOS6huinoyDmlLbosrvntIDpjIQ8L3JvdXRlci1saW5rPgogICAgICAgICAgICAgICAgICA8L3YtYnRuPiAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4K"},null]}