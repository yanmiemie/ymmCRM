{"remainingRequest":"/Users/qiushunqun/Desktop/_長庚/ask8/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiushunqun/Desktop/_長庚/ask8/src/components/asask5_Display.vue?vue&type=template&id=1004d9fe&","dependencies":[{"path":"/Users/qiushunqun/Desktop/_長庚/ask8/src/components/asask5_Display.vue","mtime":1651639538947},{"path":"/Users/qiushunqun/Desktop/_長庚/ask8/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/_長庚/ask8/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/_長庚/ask8/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/_長庚/ask8/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}