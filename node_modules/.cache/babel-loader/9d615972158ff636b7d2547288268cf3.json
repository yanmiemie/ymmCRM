{"remainingRequest":"/Users/qiushunqun/Desktop/_長庚/ask8/node_modules/thread-loader/dist/cjs.js!/Users/qiushunqun/Desktop/_長庚/ask8/node_modules/babel-loader/lib/index.js!/Users/qiushunqun/Desktop/_長庚/ask8/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qiushunqun/Desktop/_長庚/ask8/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiushunqun/Desktop/_長庚/ask8/src/components/PMNAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiushunqun/Desktop/_長庚/ask8/src/components/PMNAdd.vue","mtime":1634974970030},{"path":"/Users/qiushunqun/Desktop/_長庚/ask8/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/_長庚/ask8/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/_長庚/ask8/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/_長庚/ask8/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/_長庚/ask8/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}